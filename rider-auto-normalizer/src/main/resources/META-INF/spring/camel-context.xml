<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <!-- Set username and password to values you set in etc/user.properties -->
  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent" >
    <property name="brokerURL" value="tcp://localhost:61616"/>
    <property name="userName" value="admin"/>
    <property name="password" value="admin"/>
  </bean>

  <camelContext trace="true" id="rider-auto-normalizer" xmlns="http://camel.apache.org/schema/spring">
    <route customId="true" id="normalize-message-data">
      <from uri="activemq:incomingOrders"/>
      <choice>
        <when>
          <simple>${header.CamelFileName} regex '^.*xml$'</simple>
          <unmarshal>
            <jaxb contextPath="org.fusesource.camel.model"/>
          </unmarshal>
          <marshal>
            <jaxb contextPath="org.fusesource.camel.model"/>
          </marshal>
          <to uri="activemq:orders"/>
        </when>
        <when>
          <simple>${header.CamelFileName} regex '^.*(csv|csl)$'</simple>
          <unmarshal>
            <bindy type="Csv" classType="org.fusesource.camel.model.Order"/>
          </unmarshal>
          <convertBodyTo type="org.fusesource.camel.model.Order"/>
          <marshal>
            <jaxb contextPath="org.fusesource.camel.model"/>
          </marshal>
          <to uri="activemq:orders"/>
        </when>
        <otherwise>
          <unmarshal>
            <jaxb contextPath="org.fusesource.camel.model"/>
          </unmarshal>
          <marshal>
            <jaxb contextPath="org.fusesource.camel.model"/>
          </marshal>
          <to uri="activemq:orders"/>
        </otherwise>
      </choice>
    </route>
  </camelContext>

</beans>
